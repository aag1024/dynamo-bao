// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig,
  IndexConfig
} = require('../../../../src/model.js');

const {
  GSI_INDEX_ID1
} = require('../../../../src/constants.js');

const { 
    UlidField,
    RelatedField,
    StringField,
    DateTimeField,
    CreateDateField,
    TtlField
} = require('../../../../src/fields.js');




class Session extends BaoModel {
  static modelPrefix = 's';
  static iterable = false;
  static iterationBuckets = 100;
  
  static fields = {
    sessionId: UlidField({ autoAssign: true, required: true }),
    userId: RelatedField('User', { required: true }),
    accessToken: StringField({ required: true }),
    refreshToken: StringField({ required: true }),
    expiresAt: DateTimeField({ required: true }),
    createdAt: CreateDateField(),
    lastActivity: DateTimeField(),
    ttl: TtlField(),
  };

  static primaryKey = PrimaryKeyConfig('sessionId', 'modelPrefix');

  static indexes = {
    sessionsForUser: IndexConfig('userId', 'createdAt', GSI_INDEX_ID1),
  };




  async getUser() {
    return await this.getOrLoadRelatedField('userId');
  }
}

module.exports = { Session };
