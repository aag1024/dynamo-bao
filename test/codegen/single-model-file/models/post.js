// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaseModel, 
  GSI_INDEX_ID1,
  GSI_INDEX_ID2,
  PrimaryKeyConfig,
  IndexConfig
} = require('dynamo-bao');

const { 
    UlidField,
    RelatedField,
    StringField,
    CreateDateField,
    VersionField
} = require('dynamo-bao').fields;



class Post extends BaseModel {
  static modelPrefix = 'p';
  
  static fields = {
    postId: UlidField({ autoAssign: true }),
    userId: RelatedField('User', { required: true }),
    title: StringField({ required: true }),
    content: StringField({ required: true }),
    createdAt: CreateDateField(),
    VersionField: VersionField(),
  };

  static primaryKey = PrimaryKeyConfig('postId', 'modelPrefix');

  static indexes = {
    allPosts: IndexConfig('modelPrefix', 'postId', GSI_INDEX_ID1),
    postsForUser: IndexConfig('userId', 'createdAt', GSI_INDEX_ID2),
  };


  static async cgQueryAllPosts(skCondition = null, options = {}) {
    const results = await this.queryByIndex(
      'allPosts',
      this.modelPrefix,
      skCondition,
      options
    );

    return results;
  }


}

module.exports = { Post };
