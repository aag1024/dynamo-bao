{"list":[{"title":"BaoError","link":"<a href=\"BaoError.html\">BaoError</a>"},{"title":"BaoFields","link":"<a href=\"BaoFields.html\">BaoFields</a>","description":"<p>This module contains the built-in fields for Bao.</p>"},{"title":"BaoFields.BaoBaseField","link":"<a href=\"BaoFields.BaoBaseField.html\">BaoBaseField</a>","description":"<p>Base class for all fields. Do not instantiate this class directly.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#fromDy","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#fromDy\">BaoBaseField#fromDy</a>","description":"<p>Convert the field value from the DynamoDB representation to the JS representation.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#fromGsi","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#fromGsi\">BaoBaseField#fromGsi</a>","description":"<p>Convert the field value from the index format used by DynamoDB to the JS representation.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#getInitialValue","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#getInitialValue\">BaoBaseField#getInitialValue</a>","description":"<p>Get the initial JS value for the field.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#getUpdateExpression","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#getUpdateExpression\">BaoBaseField#getUpdateExpression</a>","description":"<p>Get the DynamoDB update expression for the field. You usually don't need to override this.\nBy default, it will return a SET expression, unless the value is null. If the value is null,\nit will remove the attribute from the item .</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#toDy","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#toDy\">BaoBaseField#toDy</a>","description":"<p>Convert the field value from the JS representation to DynamoDB representation.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#toGsi","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#toGsi\">BaoBaseField#toGsi</a>","description":"<p>Convert the field value from the JS representation the index format used by DynamoDB.\nThis must be a string representation of the value. Pay special attention to\nhow this value sorts since it will be used for sort keys.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#updateBeforeSave","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#updateBeforeSave\">BaoBaseField#updateBeforeSave</a>","description":"<p>Update the field value before saving. An example of where you might override this\nis a modified date field that you want to update to the current date/time before\nsaving.</p>"},{"title":"BaoFields.BaoBaseField.BaoBaseField#validate","link":"<a href=\"BaoFields.BaoBaseField.html#.BaoBaseField#validate\">BaoBaseField#validate</a>","description":"<p>Validate the JS field value.</p>"},{"title":"BaoFields.BinaryField","link":"<a href=\"BaoFields.BinaryField.html\">BinaryField</a>","description":"<p>A field that stores a binary value.</p>"},{"title":"BaoFields.BooleanField","link":"<a href=\"BaoFields.BooleanField.html\">BooleanField</a>","description":"<p>A field that stores a boolean value.</p>"},{"title":"BaoFields.CounterField","link":"<a href=\"BaoFields.CounterField.html\">CounterField</a>","description":"<p>A field that stores an integer value that can be incremented or decremented atomically.</p>"},{"title":"BaoFields.CreateDateField","link":"<a href=\"BaoFields.CreateDateField.html\">CreateDateField</a>","description":"<p>A field that stores a date/time value based on when the object was created.</p>"},{"title":"BaoFields.DateTimeField","link":"<a href=\"BaoFields.DateTimeField.html\">DateTimeField</a>","description":"<p>A field that stores a date/time value.</p>"},{"title":"BaoFields.FloatField","link":"<a href=\"BaoFields.FloatField.html\">FloatField</a>","description":"<p>A field that stores a floating point number value.</p>"},{"title":"BaoFields.IntegerField","link":"<a href=\"BaoFields.IntegerField.html\">IntegerField</a>","description":"<p>A field that stores an integer value.</p>"},{"title":"BaoFields.ModifiedDateField","link":"<a href=\"BaoFields.ModifiedDateField.html\">ModifiedDateField</a>","description":"<p>A field that stores a date/time value based on when the object was last modified.</p>"},{"title":"BaoFields.RelatedField","link":"<a href=\"BaoFields.RelatedField.html\">RelatedField</a>","description":"<p>A field that points to another object in the database. This field makes\nit easy to load related objects.</p>"},{"title":"BaoFields.StringField","link":"<a href=\"BaoFields.StringField.html\">StringField</a>","description":"<p>A field that stores a string value.</p>"},{"title":"BaoFields.StringSetField","link":"<a href=\"BaoFields.StringSetField.html\">StringSetField</a>","description":"<p>A field that stores a set of string values. Behind the scenes this is backed by a DynamoDB string set.\nThis field cannot be indexed but can be used in filter expressions.</p>\n<p>Supports direct mutation operations that automatically track changes:</p>\n<ul>\n<li><code>add(value)</code> - Add a string to the set</li>\n<li><code>delete(value)</code> - Remove a string from the set</li>\n<li><code>clear()</code> - Remove all strings from the set</li>\n</ul>"},{"title":"BaoFields.TtlField","link":"<a href=\"BaoFields.TtlField.html\">TtlField</a>","description":"<p>A field that stores a Unix timestamp in seconds that indicates when the object should be deleted.\nDynamoDB will automatically delete the item at the specified time. This\nfield must be named &quot;ttl&quot; for DynamoDB to automatically delete the item.</p>"},{"title":"BaoFields.UlidField","link":"<a href=\"BaoFields.UlidField.html\">UlidField</a>","description":"<p>A field that stores a {@link https://github.com/ulid/spec ULID} value.</p>"},{"title":"BaoFields.VersionField","link":"<a href=\"BaoFields.VersionField.html\">VersionField</a>","description":"<p>A field that stores a ULID value that is used to track the version of the object.\nYou can use this field to implement optimistic locking by using the version field\nas a condition in your update operation.</p>"},{"title":"BaoModel","link":"<a href=\"BaoModel.html\">BaoModel</a>","description":"<p>Base model that implements core functionality for all models. Do not instantiate\nthis class directly, instead use a subclass, usually that has been generated\nby the code generator.</p>"},{"title":"BaoModel#clearConsumedCapacity","link":"<a href=\"BaoModel.html#clearConsumedCapacity\">clearConsumedCapacity</a>","description":"<p>Clear the consumed capacity for the current model instance.</p>"},{"title":"BaoModel#clearRelatedCache","link":"<a href=\"BaoModel.html#clearRelatedCache\">clearRelatedCache</a>","description":"<p>Clear the related cache for a given field.</p>"},{"title":"BaoModel#exists","link":"<a href=\"BaoModel.html#exists\">exists</a>","description":"<p>Returns true if the object exists. This is particularly useful when checking\nif an object has been found, since ObjectNotFound will be returned\nrather than null if an object is not found (so capacity information\nwill also be returned).</p>"},{"title":"BaoModel#getConsumedCapacity","link":"<a href=\"BaoModel.html#getConsumedCapacity\">getConsumedCapacity</a>","description":"<p>Get the consumed capacity for the current model instance. Every entry\nin this array will represent a separate operation.</p>"},{"title":"BaoModel#getNumericConsumedCapacity","link":"<a href=\"BaoModel.html#getNumericConsumedCapacity\">getNumericConsumedCapacity</a>","description":"<p>Get the number of RCU/WCU consumed by a model instance. Additional capacity\nis added every time a new operation (finding, saving, loading related data)\nis performed on the instance. You can reset the consumed capacity by calling\n{@link BaoModel#clearConsumedCapacity}.</p>"},{"title":"BaoModel#getOrLoadRelatedField","link":"<a href=\"BaoModel.html#getOrLoadRelatedField\">getOrLoadRelatedField</a>","description":"<p>Get or load a related field. If the field is already loaded, it will be\nreturned without reloading. Otherwise, it will be loaded from the database\nand returned.</p>"},{"title":"BaoModel#getPrimaryId","link":"<a href=\"BaoModel.html#getPrimaryId\">getPrimaryId</a>","description":"<p>Get the primary ID for a given object. This is a string that uniquely\nidentifies the object in the database. When using {@link BaoModel.find},\nthis is the id to use. Do not make assumptions about how this id\nis formatted since it will depend on the model key structure.</p>"},{"title":"BaoModel#getRelated","link":"<a href=\"BaoModel.html#getRelated\">getRelated</a>","description":"<p>Get a related field. If the field is not loaded, it will return null.</p>"},{"title":"BaoModel#hasChanges","link":"<a href=\"BaoModel.html#hasChanges\">hasChanges</a>","description":"<p>Returns true if any fields have been modified since the object was last\nloaded from the database.</p>"},{"title":"BaoModel#isLoaded","link":"<a href=\"BaoModel.html#isLoaded\">isLoaded</a>","description":"<p>Returns true if the object has been loaded from the database.</p>"},{"title":"BaoModel#loadRelatedData","link":"<a href=\"BaoModel.html#loadRelatedData\">loadRelatedData</a>","description":"<p>Load objects for RelatedField's on the current model instance.</p>"},{"title":"BaoModel#save","link":"<a href=\"BaoModel.html#save\">save</a>","description":"<p>Save the current object to the database. This operation will diff the current\nstate of the object with the state that has been loaded from dynamo to\ndetermine which changes need to be saved.</p>"},{"title":"BaoModel.batchFind","link":"<a href=\"BaoModel.html#.batchFind\">batchFind</a>","description":"<p>This is the primary way to load multiple objects given an array of ids.\nThis function should only be used when {@link BaoModel.find} or {@link BaoModel#loadRelatedData} is not sufficient.</p>"},{"title":"BaoModel.create","link":"<a href=\"BaoModel.html#.create\">create</a>","description":"<p>Create a new item in the database.</p>"},{"title":"BaoModel.delete","link":"<a href=\"BaoModel.html#.delete\">delete</a>","description":"<p>Delete an existing item in the database.</p>"},{"title":"BaoModel.find","link":"<a href=\"BaoModel.html#.find\">find</a>","description":"<p>Find is the primary way to look up an object given its id. It will return the object\nif it exists, or an {@link ObjectNotFound} instance if it does not. Find supports\nefficient batch loading and caching. In general, this function should be\npreferred over {@link BaoModel.batchFind}. Find uses batchFind internally, unless batchDelay\nis set to 0.</p>"},{"title":"BaoModel.findByUniqueConstraint","link":"<a href=\"BaoModel.html#.findByUniqueConstraint\">findByUniqueConstraint</a>","description":"<p>Find an object by a unique constraint. Any unique constraint can also be used\nto find an object.</p>"},{"title":"BaoModel.getPrimaryId","link":"<a href=\"BaoModel.html#.getPrimaryId\">getPrimaryId</a>","description":"<p>Static version of {@link BaoModel#getPrimaryId}.</p>"},{"title":"BaoModel.getRelatedObjectsViaMap","link":"<a href=\"BaoModel.html#.getRelatedObjectsViaMap\">getRelatedObjectsViaMap</a>","description":"<p>Queries related objects via a mapping table.</p>\n<p>This is primary used by the code generator to build helper functions\nfor querying related objects. For most common operations, you should\nnot need to use this method directly.</p>"},{"title":"BaoModel.makePrimaryId","link":"<a href=\"BaoModel.html#.makePrimaryId\">makePrimaryId</a>","description":"<p>Make a primary ID from a pk and sk.</p>"},{"title":"BaoModel.queryByIndex","link":"<a href=\"BaoModel.html#.queryByIndex\">queryByIndex</a>","description":"<p>This is the primary method for querying data via a named index or primary key.\nIf possible, you should always specify a sort key condition using skCondition.\nThis will use dynamodb's index to query the data without scanning the partition.</p>\n<p>Optionally, you can specify a filter condition to further narrow down the results.\nPlease note that a filter condition will scan anything in the partition that matches\nthe skCondition, so if you haven't specified a skCondition, this will scan\nthe entire partition (and consume more capacity units). However, there may\nalso be times when this works without issue and is more efficient than adding\nanother index and paying for the write overhead of the index.</p>"},{"title":"BaoModel.queryByPrimaryKey","link":"<a href=\"BaoModel.html#.queryByPrimaryKey\">queryByPrimaryKey</a>","description":"<p>Queries items by their primary key value with an optional sort key condition</p>\n<p>For more details, see queryByIndex. In general, it's recommended to use\nqueryByIndex and give a name to the index. You can do this by adding\nan index name in the indexes section of the model definition and setting\nit to primaryKey. For example:</p>\n<p>models:\nTaggedPost:\n...\nindexes:\npostsForTag: this.primaryKey</p>"},{"title":"BaoModel.setTestId","link":"<a href=\"BaoModel.html#.setTestId\">setTestId</a>","description":"<p>ONLY use this for testing. It allows tests to run in isolation and\nprevent data from being shared between tests/tests to run in parallel.\nHowever, it should not be used outside of this context. For examples,\nshowing how to use this, see the tests.</p>"},{"title":"BaoModel.update","link":"<a href=\"BaoModel.html#.update\">update</a>","description":"<p>Update an existing item in the database.</p>"},{"title":"BatchLoadingMethods._executeFindDirect","link":"<a href=\"BatchLoadingMethods.html#._executeFindDirect\">_executeFindDirect</a>","description":"<p>Execute find operation directly without batching or caching</p>"},{"title":"BatchLoadingMethods.isInsideBatchContext","link":"<a href=\"BatchLoadingMethods.html#.isInsideBatchContext\">isInsideBatchContext</a>","description":"<p>Check if currently executing within a batch context</p>"},{"title":"ConditionalError","link":"<a href=\"ConditionalError.html\">ConditionalError</a>"},{"title":"ConfigurationError","link":"<a href=\"ConfigurationError.html\">ConfigurationError</a>"},{"title":"DataFormatError","link":"<a href=\"DataFormatError.html\">DataFormatError</a>"},{"title":"FilterExpressionBuilder","link":"<a href=\"FilterExpressionBuilder.html\">FilterExpressionBuilder</a>","description":"<p>Do not instantiate this class directly. This is used by {@link BaoModel.queryByIndex}.</p>"},{"title":"FilterExpressionBuilder#build","link":"<a href=\"FilterExpressionBuilder.html#build\">build</a>","description":"<p>Build a filter expression for a given filter and model.</p>"},{"title":"ItemNotFoundError","link":"<a href=\"ItemNotFoundError.html\">ItemNotFoundError</a>"},{"title":"ObjectNotFound","link":"<a href=\"ObjectNotFound.html\">ObjectNotFound</a>"},{"title":"ObjectNotFound#exists","link":"<a href=\"ObjectNotFound.html#exists\">exists</a>","description":"<p>Returns false, since the object was not found.</p>"},{"title":"ObjectNotFound#getNumericConsumedCapacity","link":"<a href=\"ObjectNotFound.html#getNumericConsumedCapacity\">getNumericConsumedCapacity</a>","description":"<p>Returns the numeric consumed capacity for the operation. For compatibility this\nmethod supports an includeRelated parameter, but it is ignored, since there are\nno related objects to consider.</p>"},{"title":"QueryError","link":"<a href=\"QueryError.html\">QueryError</a>"},{"title":"TenantContext","link":"<a href=\"TenantContext.html\">TenantContext</a>","description":"<p>Manages tenant context for multi-tenant applications using DynamoBao.\nProvides runtime tenant resolution and instance management with concurrency safety.</p>"},{"title":"TenantContext.addResolver","link":"<a href=\"TenantContext.html#.addResolver\">addResolver</a>","description":"<p>Adds a resolver function to determine tenant context.\nResolvers are tried in the order they were added.</p>"},{"title":"TenantContext.clearResolvers","link":"<a href=\"TenantContext.html#.clearResolvers\">clearResolvers</a>","description":"<p>Clears all resolver functions.</p>"},{"title":"TenantContext.clearTenant","link":"<a href=\"TenantContext.html#.clearTenant\">clearTenant</a>","description":"<p>Clears the current tenant context.\nFor test cleanup and simple use cases.</p>"},{"title":"TenantContext.getCurrentTenant","link":"<a href=\"TenantContext.html#.getCurrentTenant\">getCurrentTenant</a>","description":"<p>Gets the current tenant ID using async context or resolver chain.\nConcurrency-safe using AsyncLocalStorage.</p>"},{"title":"TenantContext.getInstance","link":"<a href=\"TenantContext.html#.getInstance\">getInstance</a>","description":"<p>Gets or creates a ModelManager instance for the specified tenant.</p>"},{"title":"TenantContext.reset","link":"<a href=\"TenantContext.html#.reset\">reset</a>","description":"<p>Resets all tenant context state (for testing).</p>"},{"title":"TenantContext.runWithTenant","link":"<a href=\"TenantContext.html#.runWithTenant\">runWithTenant</a>","description":"<p>Runs a callback function with a specific tenant context.\nEnsures concurrency safety by using AsyncLocalStorage.</p>"},{"title":"TenantContext.setCurrentTenant","link":"<a href=\"TenantContext.html#.setCurrentTenant\">setCurrentTenant</a>","description":"<p>Sets the current tenant ID and returns the associated ModelManager instance.\nFor backward compatibility and simple use cases (like tests).</p>"},{"title":"TenantContext.validateTenantRequired","link":"<a href=\"TenantContext.html#.validateTenantRequired\">validateTenantRequired</a>","description":"<p>Validates that tenant context is available when required by configuration.</p>"},{"title":"TenantContext.withTenant","link":"<a href=\"TenantContext.html#.withTenant\">withTenant</a>","description":"<p>Explicit tenant override for cross-tenant operations.\nAlias for runWithTenant for better readability in cross-tenant scenarios.</p>"},{"title":"ValidationError","link":"<a href=\"ValidationError.html\">ValidationError</a>"},{"title":"cleanupTestData","link":"<a href=\"global.html#cleanupTestData\">cleanupTestData</a>","description":"<p>Legacy cleanup function for backward compatibility\nNow delegates to iteration-based cleanup</p>"},{"title":"cleanupTestDataByIds","link":"<a href=\"global.html#cleanupTestDataByIds\">cleanupTestDataByIds</a>","description":"<p>Fallback cleanup method for tracking individual items\nOnly needed for non-iterable models (rare case)</p>"},{"title":"cleanupTestDataByIteration","link":"<a href=\"global.html#cleanupTestDataByIteration\">cleanupTestDataByIteration</a>","description":"<p>Clean up test data using iteration (recommended approach)\nAll test models are now iterable, making this the primary cleanup method</p>"},{"title":"generateTestTenant","link":"<a href=\"global.html#generateTestTenant\">generateTestTenant</a>","description":"<p>Generate unique tenant ID for test isolation</p>"},{"title":"initTestModelsWithTenant","link":"<a href=\"global.html#initTestModelsWithTenant\">initTestModelsWithTenant</a>","description":"<p>Initializes models with tenant context for testing</p>"},{"title":"runWithBatchContext","link":"<a href=\"global.html#runWithBatchContext\">runWithBatchContext</a>","description":"<p>Initialize batch context for request-scoped batching.\nThis should be called at the beginning of each request in Cloudflare Workers.</p>"},{"title":"src/exceptions.js","link":"<a href=\"src_exceptions.js.html\">src/exceptions.js</a>","description":"<p>Custom exception classes for dynamo-bao library.\nThese provide more specific error types than generic Error objects.</p>"},{"title":"trackCreatedItem","link":"<a href=\"global.html#trackCreatedItem\">trackCreatedItem</a>","description":"<p>Helper function to track created items (for non-iterable models)</p>"},{"title":"verifyCleanup","link":"<a href=\"global.html#verifyCleanup\">verifyCleanup</a>","description":"<p>Verify cleanup was successful by checking if any items remain</p>"}]}