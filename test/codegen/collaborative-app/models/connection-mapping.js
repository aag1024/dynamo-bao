// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig,
  IndexConfig
} = require('dynamo-bao');

const {
  GSI_INDEX_ID1
} = require('dynamo-bao').constants;


const { 
    StringField,
    RelatedField,
    CreateDateField,
    DateTimeField,
    TtlField
} = require('dynamo-bao').fields;






class ConnectionMapping extends BaoModel {
  static modelPrefix = 'cm';
  static iterable = false;
  static iterationBuckets = 100;
  
  static fields = {
    connectionId: StringField({ required: true }),
    userId: RelatedField('User', { required: true }),
    appId: RelatedField('App', { required: true }),
    documentId: RelatedField('Document', { required: true }),
    connectedAt: CreateDateField(),
    lastActivity: DateTimeField(),
    ttl: TtlField(),
  };

  static primaryKey = PrimaryKeyConfig('documentId', 'connectionId');

  static indexes = {
    connectionsForDocument: this.primaryKey,
    connectionsForUser: IndexConfig('userId', 'connectedAt', GSI_INDEX_ID1),
  };




  async getUser() {
    return await this.getOrLoadRelatedField('userId');
  }

  async getApp() {
    return await this.getOrLoadRelatedField('appId');
  }

  async getDocument() {
    return await this.getOrLoadRelatedField('documentId');
  }
}

module.exports = { ConnectionMapping };
