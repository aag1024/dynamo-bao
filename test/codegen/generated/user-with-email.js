// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig
} = require('dynamo-bao');


const { 
    UlidField,
    StringField
} = require('dynamo-bao').fields;


const { EmailField } = require('../custom-fields/email-field');



class UserWithEmail extends BaoModel {
  static modelPrefix = 'u';
  
  static fields = {
    userId: UlidField({ required: true, autoAssign: true }),
    email: EmailField({ required: true, allowedDomains: ["company.com","subsidiary.com"] }),
    name: StringField(),
  };

  static primaryKey = PrimaryKeyConfig('userId', 'modelPrefix');




  static async findAll(options = {}) {
    return await this.scan(options);
  }

  static async findById(id) {
    return await this.get(id);
  }



}

module.exports = { UserWithEmail };
