// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig,
  IndexConfig
} = require('../../../../src/model.js');

const {
  GSI_INDEX_ID1,
  GSI_INDEX_ID2
} = require('../../../../src/constants.js');

const { 
    RelatedField,
    CreateDateField
} = require('../../../../src/fields.js');




class TaggedPost extends BaoModel {
  static modelPrefix = 'tp';
  static iterable = false;
  static iterationBuckets = 100;
  
  static fields = {
    tagId: RelatedField('Tag', { required: true }),
    postId: RelatedField('Post', { required: true }),
    createdAt: CreateDateField(),
  };

  static primaryKey = PrimaryKeyConfig('tagId', 'postId');

  static indexes = {
    postsForTag: this.primaryKey,
    tagsForPost: IndexConfig('postId', 'tagId', GSI_INDEX_ID1),
    recentPostsForTag: IndexConfig('tagId', 'createdAt', GSI_INDEX_ID2),
  };




  async getTag() {
    return await this.getOrLoadRelatedField('tagId');
  }

  async getPost() {
    return await this.getOrLoadRelatedField('postId');
  }
}

module.exports = { TaggedPost };
