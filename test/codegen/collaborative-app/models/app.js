// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig,
  IndexConfig
} = require('dynamo-bao');

const {
  GSI_INDEX_ID1
} = require('dynamo-bao').constants;


const { 
    UlidField,
    StringField,
    RelatedField,
    CreateDateField,
    ModifiedDateField
} = require('dynamo-bao').fields;






class App extends BaoModel {
  static modelPrefix = 'a';
  static iterable = true;
  static iterationBuckets = 10;
  
  static fields = {
    appId: UlidField({ autoAssign: true, required: true }),
    name: StringField({ required: true }),
    mode: StringField({ required: true }),
    ownerId: RelatedField('User', { required: true }),
    googleClientId: StringField(),
    googleClientSecret: StringField(),
    allowedDomains: StringField(),
    createdAt: CreateDateField(),
    modifiedAt: ModifiedDateField(),
  };

  static primaryKey = PrimaryKeyConfig('appId', 'modelPrefix');

  static indexes = {
    appsForOwner: IndexConfig('ownerId', 'createdAt', GSI_INDEX_ID1),
  };




  async getOwner() {
    return await this.getOrLoadRelatedField('ownerId');
  }
}

module.exports = { App };
