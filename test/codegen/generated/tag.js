// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 

const { 
  BaseModel, 
  PrimaryKeyConfig
} = require('dynamo-bao');

const { 
    UlidField,
    StringField,
    CreateDateField
} = require('dynamo-bao').fields;

const { TaggedPost } = require('./tagged-post');

class Tag extends BaseModel {
  static modelPrefix = 't';
  
  static fields = {
    tagId: UlidField({ required: true, autoAssign: true }),
    name: StringField({ required: true }),
    createdAt: CreateDateField(),
  };

  static primaryKey = PrimaryKeyConfig('tagId', 'modelPrefix');



  async cgQueryPosts(skCondition = null, options = {}) {
    const results = await TaggedPost.queryByIndex(
      'postsForTag',
      this.getPkValue(),
      skCondition,
      options
    );

    return results;
  }
  async cgQueryRecentPosts(skCondition = null, options = {}) {
    const results = await TaggedPost.queryByIndex(
      'recentPostsForTag',
      this.getPkValue(),
      skCondition,
      options
    );

    return results;
  }

}

module.exports = { Tag };
