// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨
// DO NOT EDIT: Generated by model-codegen
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨
const { BaoModel, PrimaryKeyConfig } = require("dynamo-bao");

const { UlidField, StringField, CreateDateField } =
  require("dynamo-bao").fields;

const { TaggedPost } = require("./tagged-post");

class Tag extends BaoModel {
  static modelPrefix = "t";

  static fields = {
    tagId: UlidField({ autoAssign: true, required: true }),
    name: StringField({ required: true }),
    createdAt: CreateDateField(),
  };

  static primaryKey = PrimaryKeyConfig("tagId", "modelPrefix");

  async cgGetPosts(
    mapSkCondition = null,
    limit = null,
    direction = "ASC",
    startKey = null,
  ) {
    return await TaggedPost.getRelatedObjectsViaMap(
      "postsForTag",
      this._getPkValue(),
      "postId",
      mapSkCondition,
      limit,
      direction,
      startKey,
    );
  }
  async cgGetRecentPosts(
    mapSkCondition = null,
    limit = null,
    direction = "ASC",
    startKey = null,
  ) {
    return await TaggedPost.getRelatedObjectsViaMap(
      "recentPostsForTag",
      this._getPkValue(),
      "postId",
      mapSkCondition,
      limit,
      direction,
      startKey,
    );
  }
}

module.exports = { Tag };
