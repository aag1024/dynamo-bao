// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
const { 
  BaoModel,
  PrimaryKeyConfig,
  UniqueConstraintConfig
} = require('../../../../src/model.js');

const {
  UNIQUE_CONSTRAINT_ID1
} = require('../../../../src/constants.js');

const { 
    UlidField,
    StringField,
    CreateDateField,
    ModifiedDateField
} = require('../../../../src/fields.js');


const { Post } = require('./post.js');


class User extends BaoModel {
  static modelPrefix = 'u';
  static iterable = true;
  static iterationBuckets = 10;
  
  static fields = {
    userId: UlidField({ autoAssign: true, required: true }),
    name: StringField({ required: true }),
    email: StringField({ required: true }),
    profilePictureUrl: StringField(),
    createdAt: CreateDateField(),
    modifiedAt: ModifiedDateField(),
  };

  static primaryKey = PrimaryKeyConfig('userId', 'modelPrefix');


  static uniqueConstraints = {
    uniqueEmail: UniqueConstraintConfig('email', UNIQUE_CONSTRAINT_ID1),
  };

  async queryPosts(skCondition = null, options = {}) {
    const results = await Post.queryByIndex(
      'postsForUser',
      this._getPkValue(),
      skCondition,
      options
    );

    return results;
  }

  static async findByEmail(value) {
    return await this.findByUniqueConstraint('uniqueEmail', value);
  }

}

module.exports = { User };
