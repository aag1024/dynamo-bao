// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨  
// DO NOT EDIT: Generated by model-codegen 
// ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ ğŸ§¨ 
import { 
  BaoModel,
  PrimaryKeyConfig,
  IndexConfig
} from '../../../../src/model.js';

import {
  GSI_INDEX_ID3
} from '../../../../src/constants.js';

import { 
    UlidField,
    RelatedField,
    StringField,
    IntegerField,
    CreateDateField,
    ModifiedDateField
} from '../../../../src/fields.js';




class Comment extends BaoModel {
  static modelPrefix = 'c';
  static iterable = true;
  static iterationBuckets = 1;
  
  static fields = {
    commentId: UlidField({ autoAssign: true, required: true }),
    postId: RelatedField('Post', { required: true }),
    authorId: RelatedField('User', { required: true }),
    text: StringField({ required: true }),
    numLikes: IntegerField({ defaultValue: 0 }),
    createdAt: CreateDateField(),
    modifiedAt: ModifiedDateField(),
  };

  static primaryKey = PrimaryKeyConfig('commentId', 'modelPrefix');

  static indexes = {
    commentsForPost: IndexConfig('postId', 'createdAt', GSI_INDEX_ID3),
  };




  async getPost() {
    return await this.getOrLoadRelatedField('postId');
  }

  async getAuthor() {
    return await this.getOrLoadRelatedField('authorId');
  }
}

export { Comment };
